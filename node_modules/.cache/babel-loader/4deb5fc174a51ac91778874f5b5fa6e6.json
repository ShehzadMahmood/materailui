{"ast":null,"code":"import _slicedToArray from\"/home/prince/Desktop/bootcamp/work/session9/materailui/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import CircularProgress from'@material-ui/core/CircularProgress';import Typography from'@material-ui/core/Typography';import Box from'@material-ui/core/Box';function CircularProgressWithLabel(props){return/*#__PURE__*/React.createElement(Box,{position:\"relative\",display:\"inline-flex\"},/*#__PURE__*/React.createElement(CircularProgress,Object.assign({variant:\"static\"},props)),/*#__PURE__*/React.createElement(Box,{top:0,left:0,bottom:0,right:0,position:\"absolute\",display:\"flex\",alignItems:\"center\",justifyContent:\"center\"},/*#__PURE__*/React.createElement(Typography,{variant:\"caption\",component:\"div\",color:\"textSecondary\"},\"\".concat(Math.round(props.value),\"%\"))));}export default function CircularStatic(){var _React$useState=React.useState(10),_React$useState2=_slicedToArray(_React$useState,2),progress=_React$useState2[0],setProgress=_React$useState2[1];React.useEffect(function(){var timer=setInterval(function(){setProgress(function(prevProgress){return prevProgress>=100?10:prevProgress+10;});},800);return function(){clearInterval(timer);};},[]);return/*#__PURE__*/React.createElement(CircularProgressWithLabel,{value:progress});}","map":{"version":3,"sources":["/home/prince/Desktop/bootcamp/work/session9/materailui/src/CircularProgressWithLabel.js"],"names":["React","CircularProgress","Typography","Box","CircularProgressWithLabel","props","Math","round","value","CircularStatic","useState","progress","setProgress","useEffect","timer","setInterval","prevProgress","clearInterval"],"mappings":"yIAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,gBAAP,KAA6B,oCAA7B,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,GAAP,KAAgB,uBAAhB,CAEA,QAASC,CAAAA,yBAAT,CAAmCC,KAAnC,CAA0C,CACxC,mBACE,oBAAC,GAAD,EAAK,QAAQ,CAAC,UAAd,CAAyB,OAAO,CAAC,aAAjC,eACE,oBAAC,gBAAD,gBAAkB,OAAO,CAAC,QAA1B,EAAuCA,KAAvC,EADF,cAEE,oBAAC,GAAD,EACE,GAAG,CAAE,CADP,CAEE,IAAI,CAAE,CAFR,CAGE,MAAM,CAAE,CAHV,CAIE,KAAK,CAAE,CAJT,CAKE,QAAQ,CAAC,UALX,CAME,OAAO,CAAC,MANV,CAOE,UAAU,CAAC,QAPb,CAQE,cAAc,CAAC,QARjB,eAUE,oBAAC,UAAD,EAAY,OAAO,CAAC,SAApB,CAA8B,SAAS,CAAC,KAAxC,CAA8C,KAAK,CAAC,eAApD,YAAwEC,IAAI,CAACC,KAAL,CACtEF,KAAK,CAACG,KADgE,CAAxE,MAVF,CAFF,CADF,CAmBD,CAUD,cAAe,SAASC,CAAAA,cAAT,EAA0B,qBACPT,KAAK,CAACU,QAAN,CAAe,EAAf,CADO,oDAChCC,QADgC,qBACtBC,WADsB,qBAGvCZ,KAAK,CAACa,SAAN,CAAgB,UAAM,CACpB,GAAMC,CAAAA,KAAK,CAAGC,WAAW,CAAC,UAAM,CAC9BH,WAAW,CAAC,SAACI,YAAD,QAAmBA,CAAAA,YAAY,EAAI,GAAhB,CAAsB,EAAtB,CAA2BA,YAAY,CAAG,EAA7D,EAAD,CAAX,CACD,CAFwB,CAEtB,GAFsB,CAAzB,CAGA,MAAO,WAAM,CACXC,aAAa,CAACH,KAAD,CAAb,CACD,CAFD,CAGD,CAPD,CAOG,EAPH,EASA,mBAAO,oBAAC,yBAAD,EAA2B,KAAK,CAAEH,QAAlC,EAAP,CACD","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction CircularProgressWithLabel(props) {\n  return (\n    <Box position=\"relative\" display=\"inline-flex\">\n      <CircularProgress variant=\"static\" {...props} />\n      <Box\n        top={0}\n        left={0}\n        bottom={0}\n        right={0}\n        position=\"absolute\"\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">{`${Math.round(\n          props.value,\n        )}%`}</Typography>\n      </Box>\n    </Box>\n  );\n}\n\nCircularProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate and static variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number.isRequired,\n};\n\nexport default function CircularStatic() {\n  const [progress, setProgress] = React.useState(10);\n\n  React.useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress((prevProgress) => (prevProgress >= 100 ? 10 : prevProgress + 10));\n    }, 800);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n\n  return <CircularProgressWithLabel value={progress} />;\n}\n"]},"metadata":{},"sourceType":"module"}